(function() {
    var type_impls = Object.fromEntries([["arbos_revm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithoutEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithEnv>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","arbos_revm::stylus_executor::ProgramCacheEntry"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","arbos_revm::stylus_executor::ProgramCacheEntry"]]],["cast",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-(Z,+Y)\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-(Z,+Y)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Z, Y&gt; Arbitrary&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Z, Y)</a><div class=\"where\">where\n    Z: Arbitrary&lt;'a&gt;,\n    Y: Arbitrary&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Z, Y)</a>, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Z, Y)</a>, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_size_hint\" class=\"method trait-impl\"><a href=\"#method.try_size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_size_hint</a>(\n    depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;), MaxRecursionReached&gt;</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","cast::cmd::wallet::vanity::GeneratedWallet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-(T0,+T1)\" class=\"impl\"><a href=\"#impl-Arbitrary-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; Arbitrary for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: Arbitrary,\n    T1: Arbitrary,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parameters\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parameters</a> = (&lt;T0 as Arbitrary&gt;::Parameters, &lt;T1 as Arbitrary&gt;::Parameters)</h4></section></summary><div class='docblock'>The type of parameters that <a href=\"trait.Arbitrary.html#tymethod.arbitrary_with\"><code>arbitrary_with</code></a> accepts for configuration\nof the generated <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a>. Parameters must implement <a href=\"https://doc.rust-lang.org/nightly/std/default/trait.Default.html\"><code>Default</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Strategy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Strategy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Strategy</a> = (&lt;T0 as Arbitrary&gt;::Strategy, &lt;T1 as Arbitrary&gt;::Strategy)</h4></section></summary><div class='docblock'>The type of <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> used to generate values of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_with\" class=\"method trait-impl\"><a href=\"#method.arbitrary_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_with</a>(\n    args: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a> as Arbitrary&gt;::Parameters,\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a> as Arbitrary&gt;::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values of type the\nimplementing type (<code>Self</code>). The strategy is passed the arguments given\nin args. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>() -&gt; Self::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values\nof type the implementing type (<code>Self</code>). <a>Read more</a></div></details></div></details>","Arbitrary","cast::cmd::wallet::vanity::GeneratedWallet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cast::cmd::wallet::vanity::GeneratedWallet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRatio%3CT%3E%3E-for-(T,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-rational/0.4/src/num_rational/lib.rs.html#1144\">Source</a><a href=\"#impl-From%3CRatio%3CT%3E%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-rational/0.4/num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-rational/0.4/src/num_rational/lib.rs.html#1145\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"https://docs.rs/num-rational/0.4/num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Ratio<T>>","cast::cmd::wallet::vanity::GeneratedWallet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cast::cmd::wallet::vanity::GeneratedWallet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Strategy-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Strategy-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Strategy for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Strategy,\n    B: Strategy,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Tree\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Tree\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Tree</a> = TupleValueTree&lt;(&lt;A as Strategy&gt;::Tree, &lt;B as Strategy&gt;::Tree)&gt;</h4></section></summary><div class='docblock'>The value tree generated by this <code>Strategy</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Value</a> = (&lt;A as Strategy&gt;::Value, &lt;B as Strategy&gt;::Value)</h4></section></summary><div class='docblock'>The type of value used by functions under test generated by this Strategy. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_tree\" class=\"method trait-impl\"><a href=\"#method.new_tree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_tree</a>(\n    &amp;self,\n    runner: &amp;mut TestRunner,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a> as Strategy&gt;::Tree, <a class=\"struct\" href=\"cast/fuzz/struct.Reason.html\" title=\"struct cast::fuzz::Reason\">Reason</a>&gt;</h4></section></summary><div class='docblock'>Generate a new value tree from the given runner. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_map\" class=\"method trait-impl\"><a href=\"#method.prop_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_map</a>&lt;O, F&gt;(self, fun: F) -&gt; Map&lt;Self, F&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value) -&gt; O,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values transformed by the function\n<code>fun</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_map_into\" class=\"method trait-impl\"><a href=\"#method.prop_map_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_map_into</a>&lt;O&gt;(self) -&gt; MapInto&lt;Self, O&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::Value: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;O&gt;,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values of type <code>O</code> by transforming\n<code>Self</code> with <code>Into&lt;O&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_perturb\" class=\"method trait-impl\"><a href=\"#method.prop_perturb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_perturb</a>&lt;O, F&gt;(self, fun: F) -&gt; Perturb&lt;Self, F&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value, TestRng) -&gt; O,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values transformed by the function\n<code>fun</code>, which is additionally given a random number generator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_flat_map\" class=\"method trait-impl\"><a href=\"#method.prop_flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_flat_map</a>&lt;S, F&gt;(self, fun: F) -&gt; Flatten&lt;Map&lt;Self, F&gt;&gt;<div class=\"where\">where\n    S: Strategy,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value) -&gt; S,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps values produced by this strategy into new strategies and picks\nvalues from those strategies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_ind_flat_map\" class=\"method trait-impl\"><a href=\"#method.prop_ind_flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_ind_flat_map</a>&lt;S, F&gt;(self, fun: F) -&gt; IndFlatten&lt;Map&lt;Self, F&gt;&gt;<div class=\"where\">where\n    S: Strategy,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value) -&gt; S,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps values produced by this strategy into new strategies and picks\nvalues from those strategies while considering the new strategies to be\nindependent. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_ind_flat_map2\" class=\"method trait-impl\"><a href=\"#method.prop_ind_flat_map2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_ind_flat_map2</a>&lt;S, F&gt;(self, fun: F) -&gt; IndFlattenMap&lt;Self, F&gt;<div class=\"where\">where\n    S: Strategy,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value) -&gt; S,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Similar to <code>prop_ind_flat_map()</code>, but produces 2-tuples with the input\ngenerated from <code>self</code> in slot 0 and the derived strategy in slot 1. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_filter\" class=\"method trait-impl\"><a href=\"#method.prop_filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_filter</a>&lt;R, F&gt;(self, whence: R, fun: F) -&gt; Filter&lt;Self, F&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"cast/fuzz/struct.Reason.html\" title=\"struct cast::fuzz::Reason\">Reason</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;Self::Value) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which only produces values accepted by <code>fun</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_filter_map\" class=\"method trait-impl\"><a href=\"#method.prop_filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_filter_map</a>&lt;F, O&gt;(\n    self,\n    whence: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"cast/fuzz/struct.Reason.html\" title=\"struct cast::fuzz::Reason\">Reason</a>&gt;,\n    fun: F,\n) -&gt; FilterMap&lt;Self, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::Value) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which only produces transformed values where <code>fun</code>\nreturns <code>Some(value)</code> and rejects those where <code>fun</code> returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_union\" class=\"method trait-impl\"><a href=\"#method.prop_union\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_union</a>(self, other: Self) -&gt; Union&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which picks uniformly from <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_recursive\" class=\"method trait-impl\"><a href=\"#method.prop_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_recursive</a>&lt;R, F&gt;(\n    self,\n    depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    desired_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    expected_branch_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    recurse: F,\n) -&gt; Recursive&lt;Self::Value, F&gt;<div class=\"where\">where\n    R: Strategy&lt;Value = Self::Value&gt; + 'static,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(BoxedStrategy&lt;Self::Value&gt;) -&gt; R,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'static,</div></h4></section></summary><div class='docblock'>Generate a recursive structure with <code>self</code> items as leaves. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_shuffle\" class=\"method trait-impl\"><a href=\"#method.prop_shuffle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">prop_shuffle</a>(self) -&gt; Shuffle&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::Value: Shuffleable,</div></h4></section></summary><div class='docblock'>Shuffle the contents of the values produced by this strategy. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">boxed</a>(self) -&gt; BoxedStrategy&lt;Self::Value&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'static,</div></h4></section></summary><div class='docblock'>Erases the type of this <code>Strategy</code> so it can be passed around as a\nsimple trait object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sboxed\" class=\"method trait-impl\"><a href=\"#method.sboxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sboxed</a>(self) -&gt; SBoxedStrategy&lt;Self::Value&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h4></section></summary><div class='docblock'>Erases the type of this <code>Strategy</code> so it can be passed around as a\nsimple trait object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_shrink\" class=\"method trait-impl\"><a href=\"#method.no_shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">no_shrink</a>(self) -&gt; NoShrink&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Wraps this strategy to prevent values from being subject to shrinking. <a>Read more</a></div></details></div></details>","Strategy","cast::cmd::wallet::vanity::GeneratedWallet"]]],["chisel",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: Request&lt;Body&gt;,\n    _state: S,\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithoutEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>VMContext, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>VMFunctionBody, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithEnv>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","chisel::cmd::CmdDescriptor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","chisel::cmd::CmdDescriptor"]]],["foundry_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","foundry_common::contracts::ArtifactWithContractRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","foundry_common::contracts::ArtifactWithContractRef"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[203827,29236,349111,90405]}